name: Process New Education Submissions

on:
  issues:
    types: [opened, edited]

jobs:
  process-submission:
    if: contains(github.event.issue.labels.*.name, 'nieuwe-scholing')
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
          
      - name: Process submission
        run: |
          python3 << 'EOF'
          import re
          import csv
          import os
          
          # Get issue body
          issue_body = """${{ github.event.issue.body }}"""
          issue_title = """${{ github.event.issue.title }}"""
          
          # Extract information using regex
          def extract_field(pattern, text, default=""):
              match = re.search(pattern, text, re.MULTILINE | re.DOTALL)
              return match.group(1).strip() if match else default
          
          aanbieder = extract_field(r'\*\*Aanbieder:\*\*\s*\n?(.+?)(?=\n\*\*|\n<!--|\n\n|$)', issue_body)
          titel = extract_field(r'\*\*Titel:\*\*\s*\n?(.+?)(?=\n\*\*|\n<!--|\n\n|$)', issue_body)
          doelgroep = extract_field(r'\*\*Doelgroep/Specialisme:\*\*\s*\n?(.+?)(?=\n\*\*|\n<!--|\n\n|$)', issue_body)
          tijdsduur = extract_field(r'\*\*Tijdsduur:\*\*\s*\n?(.+?)(?=\n\*\*|\n<!--|\n\n|$)', issue_body)
          kosten = extract_field(r'\*\*Kosten:\*\*\s*\n?(.+?)(?=\n\*\*|\n<!--|\n\n|$)', issue_body)
          website = extract_field(r'\*\*Website/Link:\*\*\s*\n?(.+?)(?=\n\*\*|\n<!--|\n\n|$)', issue_body)
          beschrijving = extract_field(r'\*\*Beschrijving:\*\*\s*\n?(.+?)(?=\n\*\*|\n<!--|\n---|$)', issue_body)
          
          # Validate required fields
          if not aanbieder or not titel:
              print("Missing required fields (aanbieder or titel)")
              exit(1)
          
          # Read existing CSV
          csv_file = 'docs/ai_courses_cleaned.csv'
          rows = []
          
          if os.path.exists(csv_file):
              with open(csv_file, 'r', encoding='utf-8') as f:
                  reader = csv.reader(f)
                  rows = list(reader)
          
          # Add new row
          new_row = [aanbieder, titel, doelgroep, tijdsduur, kosten, website, beschrijving]
          
          # Check if entry already exists
          exists = False
          for row in rows[1:]:  # Skip header
              if len(row) >= 2 and row[0] == aanbieder and row[1] == titel:
                  exists = True
                  break
          
          if not exists:
              rows.append(new_row)
              
              # Write back to CSV
              with open(csv_file, 'w', encoding='utf-8', newline='') as f:
                  writer = csv.writer(f)
                  writer.writerows(rows)
              
              print(f"Added new entry: {aanbieder} - {titel}")
              
              # Set output for next step
              with open(os.environ['GITHUB_ENV'], 'a') as f:
                  f.write(f"NEW_ENTRY=true\n")
                  f.write(f"ENTRY_TITLE={titel}\n")
                  f.write(f"ENTRY_PROVIDER={aanbieder}\n")
          else:
              print("Entry already exists")
              with open(os.environ['GITHUB_ENV'], 'a') as f:
                  f.write(f"NEW_ENTRY=false\n")
          EOF
          
      - name: Update scholingsaanbod.md
        if: env.NEW_ENTRY == 'true'
        run: |
          python3 << 'EOF'
          import csv
          
          # Read CSV and generate table
          with open('docs/ai_courses_cleaned.csv', 'r', encoding='utf-8') as f:
              reader = csv.reader(f)
              rows = list(reader)
          
          # Generate markdown table
          table_lines = [
              "| Aanbieder | Titel | Doelgroep | Tijdsduur | Kosten | Link |",
              "|-----------|-------|-----------|-----------|--------|------|"
          ]
          
          for row in rows[1:]:  # Skip header
              if len(row) >= 2:
                  # Escape pipe characters in all fields
                  aanbieder = row[0].replace('|', '\\|') if len(row) > 0 else ""
                  titel = row[1].replace('|', '\\|') if len(row) > 1 else ""
                  doelgroep = row[2].replace('|', '\\|') if len(row) > 2 else ""
                  tijdsduur = row[3].replace('|', '\\|') if len(row) > 3 else ""
                  kosten = row[4].replace('|', '\\|') if len(row) > 4 else ""
                  
                  # Handle website/link column (index 5)
                  link_cell = ""
                  if len(row) > 5 and row[5].strip():
                      website = row[5].strip()
                      if website.startswith('http'):
                          link_cell = f"[LINK]({website})"
                      else:
                          link_cell = website
                  
                  table_lines.append(f"| {aanbieder} | {titel} | {doelgroep} | {tijdsduur} | {kosten} | {link_cell} |")
          
          # Read current scholingsaanbod.md
          with open('docs/scholingsaanbod.md', 'r', encoding='utf-8') as f:
              content = f.read()
          
          # Replace table section
          import re
          new_content = re.sub(
              r'(\| Aanbieder \| Titel \| Doelgroep \| Tijdsduur \| Kosten \| Link \|\n\|.*?\n)(.*?)(\n\n## Bijdragen)',
              lambda m: m.group(1) + '\n'.join(table_lines[2:]) + m.group(3),
              content,
              flags=re.DOTALL
          )
          
          # Write back
          with open('docs/scholingsaanbod.md', 'w', encoding='utf-8') as f:
              f.write(new_content)
          
          print("Updated scholingsaanbod.md")
          EOF
          
      - name: Commit changes
        if: env.NEW_ENTRY == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add docs/ai_courses_cleaned.csv docs/scholingsaanbod.md
          git commit -m "Auto-add: ${{ env.ENTRY_PROVIDER }} - ${{ env.ENTRY_TITLE }}"
          git push
          
      - name: Comment on issue
        if: env.NEW_ENTRY == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '‚úÖ **Automatisch verwerkt!**\n\nDeze scholing is toegevoegd aan het overzicht en de website wordt bijgewerkt.\n\nBedankt voor je bijdrage! üéâ'
            });
            
            // Close the issue
            github.rest.issues.update({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'closed'
            });
            
      - name: Comment if duplicate
        if: env.NEW_ENTRY == 'false'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '‚ö†Ô∏è **Duplicate gevonden**\n\nDeze scholing bestaat al in het overzicht. Controleer of de informatie correct is of voeg aanvullende details toe.'
            }); 